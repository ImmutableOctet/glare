#pragma once

#include <type_traits>
//#include <utility>

/*
    This macro generates a type-trait template in `_generated_impl` named `trait_name`
    for a function named `function_name` with the signature `function_signature`.
    
    `_generated_impl::[`trait_name`]::value` then produces a boolean value,
    indicating whether the `InputType` has the `function_name` specified.
*/
#define GENERATE_STATIC_MEMBER_FUNCTION_CHECK_TRAIT(trait_name, function_name, function_signature)                                    \
    namespace _generated_impl                                                                                                    \
    {                                                                                                                                 \
        template <typename InputType>                                                                                                 \
        class trait_name                                                                                                              \
        {                                                                                                                             \
            private:                                                                                                                  \
                template<typename T, T> struct type_and_signature;                                                                    \
                template<typename T> static std::true_type  has_function(type_and_signature<function_signature, &T::function_name>*); \
                template<typename T> static std::false_type has_function(...);                                                        \
            public:                                                                                                                   \
                static constexpr bool value = std::is_same_v<decltype(has_function<InputType>(nullptr)), std::true_type>;             \
        };                                                                                                                            \
    }

// This macro is shorthand for `GENERATE_STATIC_MEMBER_FUNCTION_CHECK_TRAIT`.
// Essentially, this version of the macro generates the `trait_name` argument using the `function_name` specified.
#define GENERATE_STATIC_MEMBER_FUNCTION_CHECK(function_name, function_signature) \
    GENERATE_STATIC_MEMBER_FUNCTION_CHECK_TRAIT(_HAS_STATIC_MEMBER_FUNCTION_##function_name, function_name, function_signature)

#define GENERATED_TRAIT_VALUE(trait_name, type) \
    _generated_impl::trait_name<type>::value

// This macro allows you to easily access the resulting value from a
// type-trait generated by `GENERATE_STATIC_MEMBER_FUNCTION_CHECK`.
#define HAS_STATIC_MEMBER_FUNCTION(type, function_name) \
    GENERATED_TRAIT_VALUE(_HAS_STATIC_MEMBER_FUNCTION_##function_name, type)